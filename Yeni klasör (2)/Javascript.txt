a===b 
a ve b nin değerleri ve türleri eşit mi diye kontrol eder

veri = Number("2") 			 stringi intte çevirir
let veri = parseInt("5")		 stringi inte çevirir ayınıs
veri = parseFloat("5.5")		floata çeviri


veri = isNaN("5x")			nan mı kontrolü (dönüştürülebilir mi) Nan True
veri = isNaN("5")			 Nan değil False


var sayi = 15.12354667

veri = sayi.toPrecision(5)		 soldan itibaren 5 basamak 15.123
veri = Math.PI
veri = Math.round(sayi)			yuvarlama işlemi round
veri = Math.ceil(sayi)			her şekilde üste yuvarlama
veri = Math.floor(sayi)			aşşağı yuvarlama

veri = Math.pow(sayi*2)
veri = Math.sqrt(sayi)
veri = Math.abs(sayi)		Mutlak değer
veri = Math.min(sayi,1,3,4,5,29)	Min veriyi verir
veri = Math.max(sayi,1,3,4,5,6)		Max i verir
veri = Math.floor(Math.random()*100)	random fonksiyonu 0 ile 1 arasında random sayi üretir 100 ile çarparak 0 ile 100 arası değer aldık floor ile yuvarlayıp int değer aldık


first = first.concat(" ", surname);		 first+ surname
first = first.toUpperCase()
first = first.toLowerCase()
first = first.indexOf("a")			 kaçıncı karakter olduğunu söyler yoksa -1

first = first.length
first = hobbies.split(" ")			 

array.push(7);		 son indexe değer ekleme
array.unshift(8);	dizin ilk indexe değer ekleme
array.shift() 		dizinin ilk indexini siler
array.pop()		son indexi siler
array.reverse	tersine çevirir
array.indexof("b")		olup olmadığın kontrol eder
array.sort(array)		sıralar



switch(new Date().getMonth())
{
    case 0:
        console.log("ocak");
        break;
    case 1:
        console.log("subat");
        break;
    case 2:
        console.log("mart");
        break;
    case 3:
        console.log("nisan");
        break;
    default:									Default ile olmama durumunu kontrol ettik
        console.log("Yanlış bilgi")				


}

for(let i in cities)				python daki mantık
{
    console.log("İndex"+i+"Şehir"+cities[i])
}

cities.forEach(function(item)			
{
    console.log(item)
})


let users=
[

    {firstname:"a", lastname:"b"},
    {firstname:"d", lastname:"d"},
    {firstname:"e", lastname:"f"},
    {firstname:"g", lastname:"h"}

]




let veri = users.map(function(item)					map fonksiyonu her item a ulaşır ve tanımladğımız şekilde bir arrayin indexine yazar
{
    return console.log(item.firstname + " DENEME "+item.lastname)
})


alert("Merhaba")					Ekrana yazı yazdırır	
let veri = prompt("Enter Name")				İnput alma
confirm("Çıkmak istediğinize emin misiniz")		Tamam iptal sekmesi açar

let veri = window.location;				Tarayıcının değerlerini çekiyor window fonksiyonu
console.log(veri)

window.location.href ="www.google.com"			linke yönlendiriyor

window.location.reload();				sayfayı yeniler
window.location.reload();				 anlamadım



function fonk()
{
    var veri1 = 30;
    let veri2=40;
    const veri3 =50;					ekrana sadece veri 1 i yazdıracak diğerlerine tanımsız diyecek bunun sebebi veri1 i var ile tanımlamamız
    console.log(veri1,veri2,veri3)			blok içerisinde var ile tanımlanan değişkenlerin değerini değiştirirsek globalde de değişirler



}
fonk();





veri = document.getElementById("header");			kalıp bu			
veri = document.getElementById("header").id;			headerın id sini alırız		
veri = document.getElementById("header").class;			class ismini alırız						
	

veri = document.getElementById("header");
veri.style.color ="purple"			başlığın özelliklerini değiştirdi
veri.style.fontSize="50px"
veri.style.fontWeight="bold"



document.getElementById("header").innerText = "Yapılacaklar listesi"	header ı değiştirir
document.getElementById("header").innerHTML ="<b> To Do List </b>"	innertext uzantısını kullanınca <b> ve </b> text şeklinde başlıkta yazar bu yüzden innerHTML kullanıyorız


document.querySelector("li").style.color ="Blue"			listenin renginideğiştiriyoruz
document.querySelector("li:last-child").style.color="yellow"
document.querySelector("li:nth-child(2)").style.color ="red"




document.querySelector("li").classList.add("active");			class ismi ekledik 



veri= document.getElementsByClassName("list-group-item")		class ismiyle elemente ulaşma
veri= document.getElementsByClassName("list-group-item")[1]		1. index elementine ulaşma


veri[1].style.fontSize ="30px"
veri[1].textContent ="New text"

for(let i =0;i<veri.length;i++)
{
    veri[i].style.color="red"				hepsini for ile red yaptık
}


--------------------------------------
veri = document.querySelectorAll("li");

veri.forEach(function(item,index)			queryselector all foreach methoduna sahip olduğu için for each ile yazabiliriz
{
    item.textContent=index +" index"		
}
)

--------------------------------

let value;


const todolist = document.querySelector(".list-group")
value= todolist;

const todo= document.querySelector(".list-group-item:nth-child(2)")
value =todo;

const card = document.querySelector(".card")
value = card;
//Child Nodes


value = todolist.childNodes;
value = todolist.children;
value = todolist.children[0];
value = todolist.children[1].textContent ="degisen madde";

value = card.children;
value = card.children[1].children[0].textContent="Degistirdim"

value = todolist;
//value = todolist.children[0];
value = todolist.firstElementChild;
value = todolist.lastElementChild;


value = card;
value = card.parentElement;

value =todo;
value = todo.nextElementSibling;
value = todo.previousElementSibling;

console.log(value)


-----------------------------------

JAVASCRİPTLE Lİ OLUŞTURUP İÇERİSİNE ATTRİBUTES EKLEYEREK UL NİN İÇİNE APPEND ETME

const li = document.createElement("li");

// add class
li.className ="list-group-item list-group-item-secondary";
li.id ="denemeid";
//attribute

li.setAttribute("title","new item")
li.setAttribute("data-id","5");
const text = document.createTextNode("yeni item")
li.appendChild(text);

const a = document.createElement("a");
a.setAttribute("href","#");
a.className = "delete-item float-right";
a.innerHTML ='<i class="fas fa-times"></i>'
li.appendChild(a);

document.querySelector("#task-list").appendChild(li)


console.log(li);

----------------
const taskList = document.querySelector("#task-list");
//taskList.remove();

//taskList.children[1].remove();

//taskList.removeChild(taskList.children[1])
//attribute deletion

//taskList.children[0].removeAttribute("class")

for(let i=0;taskList.children.length;i++)
{
    taskList.children[i].removeAttribute("class");
}

console.log(taskList)

-----------------

const cardHeader=document.querySelector(".card-header");

const h2 = document.createElement("h2");
h2.setAttribute("class","card-header");
h2.appendChild(document.createTextNode("yeni node"));
const card = cardHeader.parentNode;
card.replaceChild(h2,cardHeader);

//classlarda güncelleme

const tasklist = document.querySelector("#task-list")

let value;
let link = tasklist.children[0].children[0];
value = link.className;
value = link.classList;

link.classList.add("new");
link.classList.remove("new");
value = link.getAttribute("href");
value = link.setAttribute("href","www.google.com")
value = link.hasAttribute("href");

console.log(value)
-----------------------------

const btn = document.querySelector("#btnDeleteAll");


// function btnclick()
// {
// console.log("Button clicked");
// }

// CTRL-Ö YORUM SATIRI YAPMA
 


// a. preventDefault sayfanın oto refresh atmasını engeller
btn.addEventListener("click",function(a)
{
    let value;
    value =a;
    value =a.target;
    value = a.target.id;
    a.preventDefault();
    console.log(value)
}); 


-----------------------


const btn = document.querySelector("#btnAddNewTask")
const ul = document.querySelector("#task-list")
//click event
btn.addEventListener("click",run);
ul.addEventListener("click",run);
// double click
btn.addEventListener("dblclick",run);
ul.addEventListener("dblclick",run);
//mouse down

btn.addEventListener("mousedown",run);
ul.addEventListener("mousedown",run);
//mouseup
btn.addEventListener("mouseup",run);
ul.addEventListener("mouseup",run);
//mouseenter
btn.addEventListener("mouseenter",run);
ul.addEventListener("mouseenter",run);
//mouseleave
btn.addEventListener("mouseleave",run);
ul.addEventListener("mouseleave",run);
//mouse move
btn.addEventListener("mousemove",run);
ul.addEventListener("mousemove",run);




function run(event)
{
    console.log("Event type "+event.type)

}
---------------------

// keyboard eventleri

const text =document.querySelector("#txtTaskName");

// //focus
// text.addEventListener("focus",run);
// //blur focus bitince fonk çalıştırır
// text.addEventListener("blur",run);
// //paste
// text.addEventListener("paste",run);
// //copy
// text.addEventListener("copy",run)
// //cut
// text.addEventListener("cut",run)
// //select
// text.addEventListener("select",run)
// //keydown karaktere basınca func çalışıyo
text.addEventListener("keydown",run)
//keyup karakterden elimizi kaldırınca func çalışıyo
text.addEventListener("keyup",run)






function run(e)
{
    console.log(e.type);
    console.log(e.target.value)
}

----------------------------
CAPTURİNGİ ANLAMADIM 
BUBBLİNG= EN İÇTEKİ FUNC ÇALIŞTIRILMASINA RAĞMEN ONUN PARENTLARI DA ÇALIŞIYOR BUNU ENGELLEMEK İÇİN E.STOPPROPAGATİON KULANILIYOR

//event bubbling

const form = document.querySelector("form");
const cardBody=document.querySelector(".card-body")
const card = document.querySelector(".card")
const container= document.querySelector(".container");
//e.stopPropagation parentlarının da çalışmaması için kullanılan bi func
// form.addEventListener("click",function(e)
// {
//     console.log("form");
//     e.stopPropagation();

// });

// cardBody.addEventListener("click",function(e)
// {
//     console.log("cardbody");
//     e.stopPropagation();
// });

// card.addEventListener("click",function(e)
// {
//     console.log("card");
//     e.stopPropagation();

// });

// container.addEventListener("click",function(e)
// {
//     console.log("container");
//     e.stopPropagation();

// });

// EVENT CAPTURİNG 3. PARAMETREYİ TRUE YAP
// form.addEventListener("click",function(e)
// {
//     console.log("form");

// },true);

// cardBody.addEventListener("click",function(e)
// {
//     console.log("cardbody");
// },true);

// card.addEventListener("click",function(e)
// {
//     console.log("card");

// },true);

// container.addEventListener("click",function(e)
// {
//     console.log("container");

// },true);

 // X İŞARETİNİ YAKALADIK VE TIKLANDIĞINDA TARGETI CONSOLA YAZDIRDIK
// const deleteItems = document.querySelectorAll(".fa-times")

// deleteItems.forEach(function(item)
// {
//     item.addEventListener("click",function(e)
//     {
//         console.log(e.target)

//     })
// })

const ul = document.querySelector("ul");
ul.addEventListener("click",function(e)
{
    if(e.target.className ==="fas fa-times")
    {
        e.target.parentElement.parentElement.remove();

    }
})
-----------------------------------------


// Tarayıcı Depolama Alanları


// Session Storage		oturum açıkken depolanacak veriler ram mantığı

// Local Storage		her zaman depolanacak veriler hard dsik mantığı



const add = document.querySelector("#add");
const del = document.querySelector("#delete");
const clear = document.querySelector("#clear");

const addkey = document.querySelector("#addkey");
const addvalue = document.querySelector("#addvalue");
const deletekey = document.querySelector("#deletekey");


add.addEventListener("click",additem);
del.addEventListener("click",deleteitem);
// clear.addEventListener("click",clearitem);

function additem(e)
{
    sessionStorage.setItem(addkey.value, addvalue.value);

}
function deleteitem(e)
{

    sessionStorage.removeItem(deletekey.value)
}
function clearitem(e)
{
    sessionStorage.clear();

}
-----------------------------------------------------------------------------------------
TO DO 

let input = document.querySelector("#txtTaskName");
let button = document.querySelector("#btnAddNewTask");
let ul = document.querySelector("#task-list");

button.addEventListener("click", addfunc);

function addfunc() {
    console.log(input);
    if (input.value === "") {
        alert("İnputu bos birakmayin");
    }
    else {
        addnewitem();
    }

}
// li creating
let li = document.createElement("li");
li.classList = "list-group-item list-group-item-secondary"
li.appendChild(document.createTextNode(input.value));
//a creating
let a = document.createElement("a");
a.classList = "delete-item float-right";
a.setAttribute("href", "#");
a.innerHTML = '<i class="fas fa-times"></i>';
//adding a to li
li.appendChild(a);

function addnewitem() {
    ul.appendChild(li);

}

// eleman silme

ul.addEventListener("click", deleteitem)
function deleteitem(e) {
    if (confirm("Silmek istediğinize emin misiniz")) {
        if (e.target.className === "fas fa-times") {
            console.log(e.target);
            console.log(e.target.parentElement);
            e.target.parentElement.parentElement.remove();

        }
    }
    e.preventDefault();
}
// delete all

let deleteallbutton = document.querySelector("#btnDeleteAll");

let cardheader = document.querySelector("#btnDeleteAll");


cardheader.addEventListener("click", removeall);

function removeall(e) {
    console.log(ul)
    if (confirm("Hepsini silmek istediğinize emin misiniz?"))
        {
            ul.childNodes.forEach(function(item)
            {
                console.log(item)
                if(item.nodeType===1) // li lerin node type ları 1 olduğu için onu kontrol ettik
                {
                    item.remove();
                }
            })
        }
}
--------------------------------------------------------------------------------
function getItemsFromLS(){
    if(localStorage.getItem("todos") === null){
        todos = [];
    }
    else{
        todos = JSON.parse(localStorage.getItem("todos")) 			// json.parse gelen değerleri arraye çevirir ve todos a eşitler
    }
    return todos;

}
// set item to Local Storage

function setItemToLS(newTodo){
    todos = getItemsFromLS();
    todos.push(newTodo);
    localStorage.setItem("todos",JSON.stringify(todos)); 			//json.stringify ile arrayi içindekileri stringe çevirir ve bitene kadar döner

}



----------------------------------
OOP




function student(name,yearOfBirth,job)
{
    this.name= name;
    this.yearOfBirth = yearOfBirth
    this.job=job;
    console.log(this);
}
let berk = new student("Berk",2002,"Student");

let aylin = new student("aylin",2000,"student")




--------------------------------------

let person = function(name,yearOfBirth,job)
{
    this.name= name;
    this.yearOfBirth= yearOfBirth;
    this.job = job;
    

}
let berk = new person("berk",2002,"Studentt");

person.prototype.calculateAge = function()
    {
        return 2023-this.yearOfBirth;
    }

console.log(berk.calculateAge());
person.prototype.getName = function()
{
    return this.name;
}
console.log(berk.getName())


----------------------------
// object.creat


let personProto = 
{
    calculateAge : function()
    {
        return 2023-this.yearOfBirth;
    }
}

let berk = Object.create(personProto);

berk.name = "berk";
berk.yearOfBirth = 2002;
berk.job ="Student"



console.log(berk.calculateAge());
-------------------------

//Prototpe Tabanl Miras alma


let Person = function(name,yearOfBirth,job)
{
    this.name= name;
    this.yearOfBirth = yearOfBirth;
    this.job = job;
}
Person.prototype.calculateAge= function()
{
    return 2023- this.yearOfBirth;
}
let teacher = function(name,yearOfBirth,job,subject)
{
    Person.call(this,name,yearOfBirth,job)
    this.subject= subject;
}

// person ın prototype nı teacherinkine eşitledik

teacher.prototype = Object.create(Person.prototype);

// set Teacher consstruct
teacher.prototype.constructor = teacher;
let hoca = new teacher("hoca",1990,"Teacher","English");

console.log(hoca);
console.log(hoca.calculateAge())


---------------------------------

// immediate func TEK SEFERLİK FONKSİYON


// function welcome()
// {
//     var days =["Sunday","Monday","Tuesday","Wednsday","Thursday","Friday","Saturday"];
//     var today = new Date();
//     var msg = "Welcome. Today is" +days[today.getDay();]

//     return msg;

// }
// console.log(welcome());
(function(name)
{
    var days =["Sunday","Monday","Tuesday","Wednsday","Thursday","Friday","Saturday"];
    var today = new Date();
    console.log(today.getDay());
    var msg = 'Welcome. '+ name + ' Today is' +days[today.getDay()];
    
    console.log(msg);




})("Berk");



----------------------------------------

